package src.components {  import flash.display.MovieClip;  import flash.events.Event;  import flash.text.TextField;  import flash.text.TextFormat;  import flash.text.TextFieldAutoSize;  import flash.text.AntiAliasType;  import src.text.GradientText;    import src.common.gradient;  import src.text.textFields;    /**   * ...   * @author Keith   */  public class CountDown extends MovieClip {	/*----Classes----*/	private var grText:GradientText;	private var tF:TextFormat;	private var txtBG:gradient;		/*----MovieClips & Strings----*/	private var sport:RegExp = /^.*:/;	private var dates:RegExp = /\(.*$/;	private var endParenth:RegExp =  /\)/;	private var time:RegExp = /[^-\s]-\s.*$/;	private var a_pm:RegExp = /\s?*$/		public var next;	public var date;	public var when;	public var today;	public var nextGame;		public function CountDown(xml) {	  next = xml.channel.item[0];	  date = next.date.split('/');	  when = next.time;	  today = new Date();	  var noon:Boolean = when.search(/^Noon/) >= 0,		  hasMinutes:Boolean = when.search(/d:dd/) >= 0;	  	  	  var month = int(date[0]), day = int(date[1]), year = int(date[2]),		  hour = noon ? 12 : int(when.split(":")[0]), 		  minutes = noon || !hasMinutes ? 0 : int(when.split(":")[1].slice(0, 2)), 		  partOfDay = noon ? 'p.m' : when.split(" ")[1].replace(/\s.*/, "");	  	  hour = partOfDay == 'a.m' ? hour : hour + 12;	  nextGame = new Date(year, month - 1, day, hour, minutes);	  createTextField();	  createLabels(['days', 'hours']);	}		private function updateCountDown(event:Event) {	  today = new Date();	  var sec = Math.floor((nextGame - today) / 1000),		  min = Math.floor(sec / 60),		  hr = Math.floor(min / 60),		  days = Math.floor(hr / 24),		  timeArr = new Array(days, (hr % 24), (min % 60), (sec % 60));	  grText.txt.text = "";	  for (var i:uint = 0; i < timeArr.length; i++) {	    if (timeArr[i].toString().length < 2) timeArr[i] = "0" + timeArr[i].toString();		var sep = i == 0 ? "   " : i == 3 ? "" : ":";		grText.txt.appendText(timeArr[i] + sep);	  }	}		private function createTextField() {	  var gradientArr = new Array([0x000000, 0x333333, 0x555555, 0x777777], [1, 1, 1, 1], [0, 127, 128, 255]);	  grText = new GradientText("Begin Count Down", ["Impact", 40, 3], gradientArr);	  addChild(grText);	  	  addEventListener(Event.ENTER_FRAME, updateCountDown);	}		private function createLabels(lbls) {	  var k = 0;	  for each(lbls in lbls) {		var label = new textFields(24, 0x000000, 'Impact', 'LEFT');		label.text = lbls;		addChild(label);		label.x = grText.x + k;		label.y = grText.y + 38;		k = 165;	  }	}		  }}